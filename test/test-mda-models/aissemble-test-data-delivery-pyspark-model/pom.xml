<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.boozallen.aissemble</groupId>
        <artifactId>test-mda-models</artifactId>
        <version>1.7.0-SNAPSHOT</version>
    </parent>

    <artifactId>aissemble-test-data-delivery-pyspark-model</artifactId>
    <packaging>habushu</packaging>

    <name>aiSSEMBLE::Test::MDA::Data Delivery Pyspark</name>
    <description>Contains models used by aiSSEMBLE Pyspark MDA</description>

    <build>
        <directory>dist</directory>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/</directory>
                            <includes>
                                <!-- clean up one-time generated files from test directory -->
                                <include>tests/resources/apps/*</include>
                                <include>target/</include>
                            </includes>
                        </fileset>
                        <!-- clean up one-time generated files from the src/aissemble_test_data_delivery_pyspark_model dir -->
                        <fileset>
                            <directory>${basedir}/src/aissemble_test_data_delivery_pyspark_model/</directory>
                            <excludes>
                                <exclude>resources/config/</exclude>
                                <exclude>resources/dictionaries/</exclude>
                                <exclude>resources/krausening/</exclude>
                                <exclude>resources/pipelines/</exclude>
                                <exclude>resources/records/</exclude>
                                <exclude>test/resources/krausening/base/</exclude>
                            </excludes>
                        </fileset>
                    </filesets>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-one-time-generated-files</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.technologybrewery.fermenter</groupId>
                <artifactId>fermenter-mda</artifactId>
                <configuration>
                    <basePackage>aissemble_test_data_delivery_pyspark_model</basePackage>
                    <profile>data-delivery-pyspark</profile>
                    <propertyVariables>
                        <targetPipeline>PysparkDataDeliveryPatterns</targetPipeline>
                        <behaveFeature>pyspark_data_delivery</behaveFeature>
                        <aissembleVersion>${version.aissemble}</aissembleVersion>
                    </propertyVariables>
                </configuration>
                <executions>
                    <!-- As we're generating out the required Poetry/Habushu project
                    configurations and structure through the utilized Fermenter MDA profile,
                    generate all files during the validate phase *before* Habushu peforms
                    Poetry specific intialization checks in the subsequent initialize phase -->
                    <execution>
                        <id>generate-python-sources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>generate-sources</goal>
                        </goals>
                    </execution>
                    <!-- Override the default generated source code directory that is
                     targeted by Fermenter's clean goal -->
                    <execution>
                        <id>clean-unmodifiable-generated-python-sources</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <generatedBasedir>${basedir}/src/aissemble_test_data_delivery_pyspark_model/generated
                            </generatedBasedir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--NB: inactive by default until https://github.com/boozallen/aissemble/issues/4 is resolved: -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>test-chart</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <arguments>
                                <argument>template</argument>
                                <argument>aissemble-spark-application-chart</argument>
                                <argument>--repo</argument>
                                <argument>${aissemble.helm.repo}</argument>
                                <argument>--version</argument>
                                <argument>${version.aissemble}</argument>
                                <argument>--values</argument>
                                <argument>
                                    src/aissemble_test_data_delivery_pyspark_model/resources/apps/pyspark-data-delivery-patterns-base-values.yaml,tests/resources/apps/pyspark-data-delivery-patterns-test-values.yaml
                                </argument>
                                <argument>-s</argument>
                                <argument>templates/deployment.yaml</argument>
                            </arguments>
                            <outputFile>target/apps/pyspark-data-delivery-patterns-test-chart.yaml</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.technologybrewery.habushu</groupId>
                <artifactId>habushu-maven-plugin</artifactId>
                <configuration>
                    <behaveOptions>--tags ~integration</behaveOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <licenseFile>LICENSE</licenseFile>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-config-resources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/test/resources/config</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>2.12.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>extensions-data-delivery-spark</artifactId>
        </dependency>
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>integration-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>ensure-docker-compose-installed</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>sh</executable>
                                    <arguments>
                                        <argument>
                                            ${project.basedir}/tests/resources/integration-test-resources/docker-compose-setup.sh
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-docker-compose</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.basedir}/target/generated-sources/docker-compose-files</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/tests/resources/integration-test-resources</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>docker-compose*.yml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.technologybrewery.habushu</groupId>
                        <artifactId>habushu-maven-plugin</artifactId>
                        <configuration>
                            <behaveOptions>--tags ~manual</behaveOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
