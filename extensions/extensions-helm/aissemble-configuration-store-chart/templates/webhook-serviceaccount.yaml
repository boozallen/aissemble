{{ if and .Values.webhook.enable .Values.webhook.serviceAccount.create }}
{{- $appName := (index .Values "aissemble-quarkus-chart" "app" "name") -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.webhook.serviceAccount.name }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-delete-policy": hook-failed, before-hook-creation
    "helm.sh/hook-weight": "-10"

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $appName }}-webhook-clusterrole
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-delete-policy": hook-failed, before-hook-creation
    "helm.sh/hook-weight": "-10"
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["delete", "deletecollection"]
{{- if .Values.webhook.certSecret.create }}
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update", "delete", "list", "watch"]
{{- end }}
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["create", "get", "update", "delete", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $appName }}-webhook-clusterrolebinding
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-delete-policy": hook-failed, before-hook-creation
    "helm.sh/hook-weight": "-10"
subjects:
- kind: ServiceAccount
  name: {{ .Values.webhook.serviceAccount.name }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ $appName }}-webhook-clusterrole
  apiGroup: rbac.authorization.k8s.io
{{ end }}